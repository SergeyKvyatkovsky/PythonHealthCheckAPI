## https://raw.githubusercontent.com/microsoft/azure-pipelines-vscode/master/service-schema.json
parameters:
  - name: appName
    type: string
    default: javaApp
  
  - name: appVersion
    type: string
    default: 0.0.1
  
  - name: language
    type: string
    default: nodeMTA
  
  - name: DIRECT_STAGE_WITH_BUILD
    type: boolean
    default: false
  
  - name: deployTo
    type: string
    default: Dummy
  
  - name: buildVersion
    type: string
    default: 0.1.0
  
  - name: artifactID
    type: string
    default: dummy
  
  - name: releaseCredLIBGroup
    type: string
    default: Dummy
  
  - name: dev_branch
    type: string
    default: \*

  - name: test_branch
    type: string
    default: refs/heads/dev

  - name: stage_branch
    type: string
    default: release-

  - name: prod_branch
    type: string
    default: release-

variables:
  - name: IS_DEV_BRANCH
    value: true
#  - name: IS_TEST_BRANCH
#    value: $[or(in(variables['Build.SourceBranch'], '${{parameters.test_branch}}'),and(startsWith(variables['Build.SourceBranch'], 'refs/heads/release'),eq('${{parameters.test_branch}}', 'release-')))]
#  - name: IS_STAGE_BRANCH
#    value: $[or(in(variables['Build.SourceBranch'], '${{parameters.stage_branch}}'),and(startsWith(variables['Build.SourceBranch'], 'refs/heads/release'),eq('${{parameters.stage_branch}}', 'release-')))]

  - name: IS_PULL_REQUEST
    value: $[eq(variables['Build.Reason'], 'PullRequest')]

stages: 
  - stage: installValidate
    displayName: Install & Validate
    jobs:
      - job:
        steps:
        - bash: echo ${IS_DEV_BRANCH}
  - stage: MegaTest
    displayName: Megatest
    condition: eq(variables['IS_DEV_BRANCH'], 'true')
    jobs:
      - job: condition_test
        condition: contains(variables['IS_DEV_BRANCH'], 'true')
        steps:
        - bash: echo "start"
        #- ${{ if eq('true', 'true') }}:
          condition: eq(variables.IS_DEV_BRANCH, 'true')
        - bash: echo "condition works"
#        - ${{ if eq('${variables.IS_DEV_BRANCH}', 'true') }}:
#        - bash: echo "this is adaptum"
#        - ${{ elseif eq(variables['IS_DEV_BRANCH'], 'dev') }}:
#        - bash: echo "the value is not adaptum or contoso"  
  - stage:
    displayName: 1111111
    jobs:
      - job: 
        steps:
          - ${{ if eq(variables['IS_DEV_BRANCH'], 'true')}}:
          - bash: echo 2112121212
          - script: 
            env:
              ${{ if eq(parameters.stage_branch, true) }}:
              TOOL_DEBUG: true
              TOOL_DEBUG_DIR: _dbg

