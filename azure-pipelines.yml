## https://raw.githubusercontent.com/microsoft/azure-pipelines-vscode/master/service-schema.json
parameters:
  - name: appName
    type: string
    default: javaApp
  - name: appVersion
    type: string
    default: 0.0.1
  - name: language
    type: string
    default: nodeMTA
  - name: DIRECT_STAGE_WITH_BUILD
    type: boolean
    default: false
  - name: deployTo
    type: string
    default: Dummy
  - name: buildVersion
    type: string
    default: 0.1.0
  - name: artifactID
    type: string
    default: dummy
#  - name: apiEndpoint
#    type: string
#    default: https://api.cf.eu10.hana.ondemand.com
  - name: releaseCredLIBGroup
    type: string
    default: Dummy
#  - name: cfManifestVariablesFiles
#    type: string
#    default: env_config/$(LIB_ENV).mtaext
#  - name: mtaExtensionDescriptor
#    type: string
#    default: env_config/$(LIB_ENV).mtaext
  - name: dev_branch
    type: string
    default: \*

  - name: test_branch
    type: string
    default: refs/heads/dev

  - name: stage_branch
    type: string
    default: release-

  - name: prod_branch
    type: string
    default: release-


  

variables:
  - name: IS_DEV_BRANCH
    value: true
#  - name: IS_TEST_BRANCH
#    value: $[or(in(variables['Build.SourceBranch'], '${{parameters.test_branch}}'),and(startsWith(variables['Build.SourceBranch'], 'refs/heads/release'),eq('${{parameters.test_branch}}', 'release-')))]
#  - name: IS_STAGE_BRANCH
#    value: $[or(in(variables['Build.SourceBranch'], '${{parameters.stage_branch}}'),and(startsWith(variables['Build.SourceBranch'], 'refs/heads/release'),eq('${{parameters.stage_branch}}', 'release-')))]



#  - name: DEFAULT_OR_DEVOPS_BRANCH
#    value: $[or(in(variables['Build.SourceBranch'], 'refs/heads/develop', 'refs/heads/main', 'refs/heads/ECP-3890'),startsWith(variables['Build.SourceBranch'], 'refs/heads/DEVOPS'))]
  
#  - name: IS_INDIVIDUALCI_DEPLOY
#    value: $[eq(variables['Build.Reason'], 'IndividualCI')]

#  - name: IS_SCHEDULED_DEPLOY
#    value: $[eq(variables['Build.Reason'], 'Schedule')]
  
#  - name: IS_RELEASE_BRANCH
#    value: $[startsWith(variables['Build.SourceBranch'], 'refs/heads/release')]

  - name: IS_PULL_REQUEST
    value: $[eq(variables['Build.Reason'], 'PullRequest')]

  # deployTO parameter will be set to 'not selected' with automated pipeline run
#  - name: IS_DEV_MANUAL
#    value: $[or(eq('${{parameters.deployTo}}', 'DEV'),eq('${{parameters.deployTo}}', 'DEV004'))]

  # Manual deploy test environment provides chance to deploy STAGE and PROD Manual deploy TEST will triggers build, using same artifact deploy STAGE& PROD environment
 # - name: IS_TEST_MANUAL 
 #   value: $[or(eq('${{parameters.deployTo}}', 'TEST004'),eq('${{parameters.deployTo}}', 'TEST'))]

 # - name: IS_RELEASE_DEPLOY_TEST
 #   value: $[and(startsWith(variables['Build.SourceBranch'], 'refs/heads/release'),eq(variables['IS_TEST_MANUAL'], 'true'))]

 # - name: IS_STAGE_MANUAL
 #   value: $[or(eq('${{parameters.deployTo}}', 'STAGE'),eq('${{parameters.deployTo}}', 'STAGE004'))]

 # - name: IS_PROD_MANUAL
 #   value: $[or(eq('${{parameters.deployTo}}', 'PROD'),eq('${{parameters.deployTo}}', 'PROD004'))]

 # - name: IS_BUILD_CRIT
 #   value: $[ or(eq(variables['IS_INDIVIDUALCI_DEPLOY'], 'true'), eq(variables['IS_DEV_MANUAL'], 'true'), eq(variables['IS_RELEASE_DEPLOY_TEST'], 'true')) ]

 # - name: SKIP_BUILD
 #   value: $[or(and(eq(variables['Build.Reason'], 'Schedule'),eq('${{ parameters.deployTo }}', 'TEST004')),eq('${{ parameters.deployTo }}', 'STAGE004'),eq('${{ parameters.deployTo }}', 'PROD004'))]
  
 # - ${{ if in(variables['Build.SourceBranch'], 'refs/heads/develop', 'refs/heads/main', 'refs/heads/DEVOPS-ECP-3119') }}:
 #     - group: SAP_LEARNING_DEV_TEST_jAVA_TEMPLATE
 #     - name: DISPLAY_DEPLOY_ENV
 #       value: DEV Environment
 # - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/test') }}:
 #     - group: SAP_LEARNING_TEST_JAVA_TEMPLATE
 #     - name: DISPLAY_DEPLOY_ENV
 #       value: TEST Environment



stages: 
  - stage: installValidate
    displayName: Install & Validate
    jobs:
#      - template: ../libs/stages/init.yml
      - job:
        steps:
        - bash: echo ${IS_DEV_BRANCH}
  - stage: MegaTest
    displayName: Megatest
    jobs:
      - job: 
        steps:
        - script: echo "start"
        - ${{ if eq(${IS_DEV_BRANCH}, 'true') }}:
        - script: echo "this is adaptum"
        - ${{ elseif eq(${IS_DEV_BRANCH}, 'dev') }}: # true
        - script: echo "this is contoso" 
        - ${{ else }}:
        - script: echo "the value is not adaptum or contoso"  

